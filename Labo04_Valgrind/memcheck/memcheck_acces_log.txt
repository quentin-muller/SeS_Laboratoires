==210== Memcheck, a memory error detector
==210== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==210== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==210== Command: ./memcheck_acces
==210== Parent PID: 207
==210== 
==210== Invalid read of size 4
==210==    at 0x1091F0: main (in /mnt/c/Users/quent/Documents/HES-SO/SeS_Laboratoires/Labo04_Valgrind/memcheck/memcheck_acces)
==210==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==210== 
==210== 
==210== Process terminating with default action of signal 11 (SIGSEGV)
==210==  Access not within mapped region at address 0x0
==210==    at 0x1091F0: main (in /mnt/c/Users/quent/Documents/HES-SO/SeS_Laboratoires/Labo04_Valgrind/memcheck/memcheck_acces)
==210==  If you believe this happened as a result of a stack
==210==  overflow in your program's main thread (unlikely but
==210==  possible), you can try to increase the size of the
==210==  main thread stack using the --main-stacksize= flag.
==210==  The main thread stack size used in this run was 8388608.
==210== 
==210== HEAP SUMMARY:
==210==     in use at exit: 0 bytes in 0 blocks
==210==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==210== 
==210== All heap blocks were freed -- no leaks are possible
==210== 
==210== For lists of detected and suppressed errors, rerun with: -s
==210== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
